// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// Data source: Tells Prisma youâ€™ll be using SQLite for your database connection.
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


// Generator: Indicates that you want to genenerate Prisma Client.
generator client {
  provider = "prisma-client-js"
}


// Data model: Here, we have written out our Link as a model.
// The Link model defines the structure of the Link database 
// table that Prisma creates.
model Link {
  id          Int       @id  @default(autoincrement())
  createdAt   DateTime  @default(now())
  description String
  url         String
  // @relation is required for every relation field in a Prisma Schema.
  // We're adding an extra field to store the id of the User who posts a Link, 
  // and then telling Prisma that postedById will be equal to the id field in the User table.
  postedBy    User?     @relation(fields: [postedById], references: [id])  
  postedById  Int? 
  votes       Vote[]
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  links       Link[]
  votes       Vote[]
}

model Vote {
  id      Int   @id @default(autoincrement())
  link    Link  @relation(fields: [linkId], references: [id])
  linkId  Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int

  @@unique([linkId, userId])
}
